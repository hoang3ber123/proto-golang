// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: recommend/recommend.proto

package recommendproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_recommend_recommend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{0}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// GetRecommendCategoryIDsRequest mesage
type GetRecommendCategoryIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Categories    []*Category            `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecommendCategoryIDsRequest) Reset() {
	*x = GetRecommendCategoryIDsRequest{}
	mi := &file_recommend_recommend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendCategoryIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendCategoryIDsRequest) ProtoMessage() {}

func (x *GetRecommendCategoryIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendCategoryIDsRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendCategoryIDsRequest) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{1}
}

func (x *GetRecommendCategoryIDsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetRecommendCategoryIDsRequest) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type GetRecommendCategoryIDsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoriesId  []string               `protobuf:"bytes,1,rep,name=categories_id,json=categoriesId,proto3" json:"categories_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecommendCategoryIDsResponse) Reset() {
	*x = GetRecommendCategoryIDsResponse{}
	mi := &file_recommend_recommend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendCategoryIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendCategoryIDsResponse) ProtoMessage() {}

func (x *GetRecommendCategoryIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendCategoryIDsResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendCategoryIDsResponse) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{2}
}

func (x *GetRecommendCategoryIDsResponse) GetCategoriesId() []string {
	if x != nil {
		return x.CategoriesId
	}
	return nil
}

type ProductRecommend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Categories    []string               `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Pricing       float64                `protobuf:"fixed64,5,opt,name=pricing,proto3" json:"pricing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductRecommend) Reset() {
	*x = ProductRecommend{}
	mi := &file_recommend_recommend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductRecommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRecommend) ProtoMessage() {}

func (x *ProductRecommend) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRecommend.ProtoReflect.Descriptor instead.
func (*ProductRecommend) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{3}
}

func (x *ProductRecommend) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductRecommend) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProductRecommend) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ProductRecommend) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProductRecommend) GetPricing() float64 {
	if x != nil {
		return x.Pricing
	}
	return 0
}

type ClickDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ClickTime     int32                  `protobuf:"varint,2,opt,name=click_time,json=clickTime,proto3" json:"click_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickDetail) Reset() {
	*x = ClickDetail{}
	mi := &file_recommend_recommend_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickDetail) ProtoMessage() {}

func (x *ClickDetail) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickDetail.ProtoReflect.Descriptor instead.
func (*ClickDetail) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{4}
}

func (x *ClickDetail) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ClickDetail) GetClickTime() int32 {
	if x != nil {
		return x.ClickTime
	}
	return 0
}

type ViewProduct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ViewTime      int32                  `protobuf:"varint,2,opt,name=view_time,json=viewTime,proto3" json:"view_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewProduct) Reset() {
	*x = ViewProduct{}
	mi := &file_recommend_recommend_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewProduct) ProtoMessage() {}

func (x *ViewProduct) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewProduct.ProtoReflect.Descriptor instead.
func (*ViewProduct) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{5}
}

func (x *ViewProduct) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ViewProduct) GetViewTime() int32 {
	if x != nil {
		return x.ViewTime
	}
	return 0
}

type GetRecommendProductIDsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Categories     []*Category            `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	Products       []*ProductRecommend    `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
	ClickDetails   []*ClickDetail         `protobuf:"bytes,3,rep,name=click_details,json=clickDetails,proto3" json:"click_details,omitempty"`
	ViewProducts   []*ViewProduct         `protobuf:"bytes,4,rep,name=view_products,json=viewProducts,proto3" json:"view_products,omitempty"`
	BoughtProducts []string               `protobuf:"bytes,5,rep,name=bought_products,json=boughtProducts,proto3" json:"bought_products,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetRecommendProductIDsRequest) Reset() {
	*x = GetRecommendProductIDsRequest{}
	mi := &file_recommend_recommend_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendProductIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendProductIDsRequest) ProtoMessage() {}

func (x *GetRecommendProductIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendProductIDsRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendProductIDsRequest) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecommendProductIDsRequest) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *GetRecommendProductIDsRequest) GetProducts() []*ProductRecommend {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *GetRecommendProductIDsRequest) GetClickDetails() []*ClickDetail {
	if x != nil {
		return x.ClickDetails
	}
	return nil
}

func (x *GetRecommendProductIDsRequest) GetViewProducts() []*ViewProduct {
	if x != nil {
		return x.ViewProducts
	}
	return nil
}

func (x *GetRecommendProductIDsRequest) GetBoughtProducts() []string {
	if x != nil {
		return x.BoughtProducts
	}
	return nil
}

type GetRecommendProductIDsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductsId    []string               `protobuf:"bytes,1,rep,name=products_id,json=productsId,proto3" json:"products_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecommendProductIDsResponse) Reset() {
	*x = GetRecommendProductIDsResponse{}
	mi := &file_recommend_recommend_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendProductIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendProductIDsResponse) ProtoMessage() {}

func (x *GetRecommendProductIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_recommend_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendProductIDsResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendProductIDsResponse) Descriptor() ([]byte, []int) {
	return file_recommend_recommend_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecommendProductIDsResponse) GetProductsId() []string {
	if x != nil {
		return x.ProductsId
	}
	return nil
}

var File_recommend_recommend_proto protoreflect.FileDescriptor

var file_recommend_recommend_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64,
	0x22, 0xad, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x22, 0x4b, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x49, 0x0a,
	0x0b, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6f, 0x75,
	0x67, 0x68, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64, 0x32, 0xf4,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x73, 0x12, 0x29,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x12,
	0x29, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x61, 0x6e, 0x67, 0x33, 0x62, 0x65, 0x72, 0x31, 0x32, 0x33,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x3b, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_recommend_recommend_proto_rawDescOnce sync.Once
	file_recommend_recommend_proto_rawDescData []byte
)

func file_recommend_recommend_proto_rawDescGZIP() []byte {
	file_recommend_recommend_proto_rawDescOnce.Do(func() {
		file_recommend_recommend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_recommend_recommend_proto_rawDesc), len(file_recommend_recommend_proto_rawDesc)))
	})
	return file_recommend_recommend_proto_rawDescData
}

var file_recommend_recommend_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_recommend_recommend_proto_goTypes = []any{
	(*Category)(nil),                        // 0: recommend.Category
	(*GetRecommendCategoryIDsRequest)(nil),  // 1: recommend.GetRecommendCategoryIDsRequest
	(*GetRecommendCategoryIDsResponse)(nil), // 2: recommend.GetRecommendCategoryIDsResponse
	(*ProductRecommend)(nil),                // 3: recommend.ProductRecommend
	(*ClickDetail)(nil),                     // 4: recommend.ClickDetail
	(*ViewProduct)(nil),                     // 5: recommend.ViewProduct
	(*GetRecommendProductIDsRequest)(nil),   // 6: recommend.GetRecommendProductIDsRequest
	(*GetRecommendProductIDsResponse)(nil),  // 7: recommend.GetRecommendProductIDsResponse
	(*timestamppb.Timestamp)(nil),           // 8: google.protobuf.Timestamp
}
var file_recommend_recommend_proto_depIdxs = []int32{
	0, // 0: recommend.GetRecommendCategoryIDsRequest.categories:type_name -> recommend.Category
	8, // 1: recommend.ProductRecommend.created_at:type_name -> google.protobuf.Timestamp
	0, // 2: recommend.GetRecommendProductIDsRequest.categories:type_name -> recommend.Category
	3, // 3: recommend.GetRecommendProductIDsRequest.products:type_name -> recommend.ProductRecommend
	4, // 4: recommend.GetRecommendProductIDsRequest.click_details:type_name -> recommend.ClickDetail
	5, // 5: recommend.GetRecommendProductIDsRequest.view_products:type_name -> recommend.ViewProduct
	1, // 6: recommend.RecommendService.GetRecommendCategoryIDs:input_type -> recommend.GetRecommendCategoryIDsRequest
	1, // 7: recommend.RecommendService.GetRecommendProductIDs:input_type -> recommend.GetRecommendCategoryIDsRequest
	2, // 8: recommend.RecommendService.GetRecommendCategoryIDs:output_type -> recommend.GetRecommendCategoryIDsResponse
	7, // 9: recommend.RecommendService.GetRecommendProductIDs:output_type -> recommend.GetRecommendProductIDsResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_recommend_recommend_proto_init() }
func file_recommend_recommend_proto_init() {
	if File_recommend_recommend_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_recommend_recommend_proto_rawDesc), len(file_recommend_recommend_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recommend_recommend_proto_goTypes,
		DependencyIndexes: file_recommend_recommend_proto_depIdxs,
		MessageInfos:      file_recommend_recommend_proto_msgTypes,
	}.Build()
	File_recommend_recommend_proto = out.File
	file_recommend_recommend_proto_goTypes = nil
	file_recommend_recommend_proto_depIdxs = nil
}
